name: EKS Career Deploy

on:
  push:
    branches:
      - main

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ap-northeast-2
  AWS_DEFAULT_OUTPUT: json
  IMAGE: datepop-career

jobs:
  deploy:
    if: contains(github.event.head_commit.message, '/SKIP-CI') == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Tag Version
        id: tag
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}
          echo ::set-output name=DEV::${GITHUB_REF#refs/*/}-${{ github.sha }}
          echo ::set-output name=URL::$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Login ECR
        run: aws ecr get-login-password | docker login --username AWS --password-stdin "$(aws sts get-caller-identity --query Account --output text).dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"

      - name: Build docker image
        run: docker build -t $IMAGE .

      - name: Deploy <main>
        run: |
          docker tag $IMAGE ${{ steps.tag.outputs.URL }}:${{ steps.tag.outputs.DEV }}
          docker push ${{ steps.tag.outputs.URL }}:${{ steps.tag.outputs.DEV }}

      - name: Deploy <main>
        uses: ladislas14/kubernetes-action@master
        with:
          args: set image deployment/${{ env.IMAGE }} ${{ env.IMAGE }}=${{ steps.tag.outputs.URL }}:${{ steps.tag.outputs.DEV }} -n datepop --record
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
